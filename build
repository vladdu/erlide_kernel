#! /bin/bash

source ./build_utils.sh

#set -x

setup_otp_travis() {
    mkdir -p $HOME/erlide_tools

    if [ ! -e ~/erlide_tools/kerl ]; then
        curl -s 'https://raw.githubusercontent.com/kerl/kerl/master/kerl' > ~/erlide_tools/kerl
        chmod u+x ~/erlide_tools/kerl
    fi

    dest="otp"
    mkdir -p $HOME/$dest
    mkdir -p $HOME/.kerl

    for v in "${OTP_VSNS[@]}"; do
        echo "install OTP $v..."
        archive_url="https://s3.amazonaws.com/travis-otp-releases/binaries/ubuntu/14.04/x86_64/erlang-$v-nonroot.tar.bz2"
        wget -o /dev/null -O $HOME/erlang-$v-nonroot.tar.bz2 ${archive_url}
        tar -xf $HOME/erlang-$v-nonroot.tar.bz2 -C $HOME/$dest/
        #echo "$v,$v" >> $HOME/.kerl/otp_builds
        #echo "$v $HOME/$dest/$v" >> $HOME/.kerl/otp_installations
    done
}

export LOCALDEP_DIR=`pwd`
export REBAR_COLOR="low"
#export QUIET=1

main() {
    arg=${1:-compile}

    setup_otp_travis

    find . -name build | xargs chmod u+x

    case "$arg" in
        "compile")
            cmds="do clean -a, compile -v"
            ;;
        "test")
            cmds="do eunit -c -v, cover -v"
            ;;
        "xref")
            cmds="do xref"
            ;;
        "dialyzer")
            cmds="do dialyzer"
            ;;
    esac

    set -e
    cd common
    ./build $cmds
    cd ../debugger
    ./build $cmds
    cd ../ide
    ./build $cmds
    if [ "$arg" == "compile" ] ; then
        ./build escriptize
    fi

    cd ..
}

main "$@"

